#!/bin/sh

nex_file=$1

# We're doing 7 tests:
# One setup test, 1 run tests, 5 result tests

echo 1..7
t=0	# current test number

case "@TESTS_USE_MPI@" in
	yes)
		set -- mpirun -np 2 -H localhost:2 "../@top_builddir@/src/mb"
		;;
	no)
		set -- "../@top_builddir@/src/mb"
		;;
	*)
		printf 'use_mpi="%s" (not "yes" or "no")\n' "@use_mpi@" >&2
		exit 1
esac

t=1
if	mkdir tmp &&
	cp "@top_srcdir@/examples/primates.nex" tmp && 
	cp "$nex_file" tmp
then
	printf 'ok %d - Setup\n' "$t"
	trap 'rm -rf tmp' EXIT
else
	printf 'not ok %d - Setup\n' "$t"
	echo Bail out! Could not copy needed files...
	exit 1
fi

ok () {
	printf 'ok %d - %s\n' "$t" "$m"
}

not_ok () {
	if [ "$1" = "SKIP" ]; then
		printf 'not ok %d - %s # SKIP\n' "$t" "$m"
	else
		printf 'not ok %d - %s\n' "$t" "$m"
	fi
}


t=$(( t + 1 )); m='Ran MrBayes'
if	(cd tmp && "$@" "${pathname#tmp/}") >"$pathname.out"
then
	ok
else
	not_ok
	echo Bail out! Could not create output...
	exit 1
fi

t=$(( t + 1 )); m='Analysis completed'
# Analysis completed in N seconds
# ... should occur once (N is integer).
awk '
/Analysis completed in [[:digit:]]+ seconds/ {
	count++
}
END {
	if (count != 1) {
		printf "Did find expected text (count = %d != 1)\n", count
		err = 1
	}
	exit err
}' "$pathname".out
if [ "$?" -eq 0 ]; then ok; else not_ok; fi

t=$(( t + 1 )); m='Cold state likelihood in range [-5715,-5700]'
# Likelihood of best state for "cold" chain of run 1 was N
# ... should occur once, with N in the range [-5715,-5700] (N is a "simple" float).
awk '
/Likelihood of best state for "cold" chain of run 1 was [-[:digit:]]+\.[[:digit:]]+/ {
	count++
	if ($NF < -5715 || $NF > -5700) {
		printf "%g not in range [-5715,-5700] on line %d\n", $NF, NR
		err = 1
	}
}
END {
	if (count != 1) {
		printf "Did find expected text (count = %d != 1)\n", count
		err = 1
	}
	exit err
}' "$pathname".out
if [ "$?" -eq 0 ]; then ok; else not_ok; fi

t=$(( t + 1 )); m='TL{all} in range [0.95,1.2]'
# There should be one line with "TL{all}" in the first field.
# The value in the last field on that lines should be in the range [0.95,1.2].
awk '
$1 == "TL{all}" {
	count++
	if ($NF < 0.95 || $NF > 1.2) {
		printf "%g not in range [0.95,1.2] on line %d\n", $NF, NR
		err = 1
	}
}
END {
	if (count != 1) {
		printf "Did find expected text (count = %d != 1)\n", count
		err = 1
	}
	exit err
}' "$pathname".out
if [ "$?" -eq 0 ]; then ok; else not_ok; fi

t=$(( t + 1 )); m='Avg. stdv. of split freqs. < 0.05'
# Average standard deviation of split frequencies = N
# ... should occur one times, where N is a "simple" float.
# N should be below 0.05.
awk '
/Average standard deviation of split frequencies = [[:digit:]]+\.[[:digit:]]+/ {
	count++
	if ($NF >= 0.05) {
		printf "%g not below 0.05 on line %d\n", $NF, NR
		err = 1
	}
}
END {
	if (count != 1) {
		printf "Did find expected text (count = %d != 1)\n", count
		err = 1
	}
	exit err
}' "$pathname".out
if [ "$?" -eq 0 ]; then ok; else not_ok; fi

	t=$(( t + 1 )); m='Avg. PSRF in range [0.95,1.2]'
	# Average PSRF for parameter values (excluding NA and >10.0) = N
	# ... should occur once and N (a "simple" float) should lie in the range [0.95,1.2].
	awk '
	/Average PSRF for parameter values \(excluding NA and >10.0\) = [[:digit:]]+\.[[:digit:]]+/ {
		count++
		if ($NF < 0.95 || $NF > 1.2) {
			printf "%g not in range [0.95,1.2] on line %d\n", $NF, NR
			err = 1
		}
	}
	END {
		if (count != 1) {
			printf "Did find expected text (count = %d != 2)\n", count
			err = 1
		}
		exit err
	}' "$pathname".out
	if [ "$?" -eq 0 ]; then ok; else not_ok SKIP; fi
done
